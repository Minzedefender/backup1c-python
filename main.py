#!/usr/bin/env python3
"""
Backup1C - –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö 1–°
–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python main.py              # –ó–∞–ø—É—Å–∫ GUI
    python main.py --cli        # –ó–∞–ø—É—Å–∫ CLI
    python main.py --help       # –°–ø—Ä–∞–≤–∫–∞
"""

import sys
import argparse
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
ROOT_DIR = Path(__file__).parent
sys.path.insert(0, str(ROOT_DIR))

__version__ = "1.0.0"


def parse_arguments():
    """–ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"""
    parser = argparse.ArgumentParser(
        description="Backup1C - –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö 1–°",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
  python main.py                      # –ó–∞–ø—É—Å–∫ GUI
  python main.py --cli                # –ó–∞–ø—É—Å–∫ CLI
  python main.py --version            # –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é
  
–î–ª—è –ø–æ–º–æ—â–∏ –ø–æ CLI –∫–æ–º–∞–Ω–¥–∞–º:
  python main.py --cli --help
        """
    )
    
    parser.add_argument(
        '--cli',
        action='store_true',
        help='–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (–±–µ–∑ GUI)'
    )
    
    parser.add_argument(
        '--version',
        action='version',
        version=f'Backup1C v{__version__}'
    )
    
    parser.add_argument(
        '--debug',
        action='store_true',
        help='–í–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏'
    )
    
    parser.add_argument(
        '--config-dir',
        type=Path,
        default=ROOT_DIR / 'config',
        help='–ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: config/)'
    )
    
    return parser.parse_known_args()


def setup_logging(debug: bool = False):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    import logging
    
    level = logging.DEBUG if debug else logging.INFO
    
    logging.basicConfig(
        level=level,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S'
    )
    
    return logging.getLogger('backup1c')


def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    if sys.version_info < (3, 9):
        print("–û–®–ò–ë–ö–ê: –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.9 –∏–ª–∏ –≤—ã—à–µ")
        print(f"–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: Python {sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}")
        print("\n–°–∫–∞—á–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é —Å https://www.python.org/downloads/")
        sys.exit(1)


def run_gui(config_dir: Path, debug: bool = False):
    """–ó–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    logger = setup_logging(debug)
    
    try:
        logger.info("–ó–∞–ø—É—Å–∫ GUI —Ä–µ–∂–∏–º–∞...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Dear PyGui
        try:
            import dearpygui.dearpygui as dpg
        except ImportError:
            print("\n" + "="*60)
            print("–û–®–ò–ë–ö–ê: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Dear PyGui –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
            print("="*60)
            print("\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
            print("  pip install -r requirements.txt")
            print("\n–ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Dear PyGui –æ—Ç–¥–µ–ª—å–Ω–æ:")
            print("  pip install dearpygui>=1.10.1")
            print("="*60 + "\n")
            sys.exit(1)
        
        # TODO: –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –æ–Ω–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ
        # from backup1c.gui.app import main as gui_main
        # return gui_main(config_dir=config_dir)
        
        # –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞
        print("\n" + "="*60)
        print("üé® GUI –†–ï–ñ–ò–ú (–í –†–ê–ó–†–ê–ë–û–¢–ö–ï)")
        print("="*60)
        print(f"\n–í–µ—Ä—Å–∏—è: {__version__}")
        print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {config_dir}")
        print(f"–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {'–í–∫–ª—é—á–µ–Ω' if debug else '–í—ã–∫–ª—é—á–µ–Ω'}")
        print("\nüí° GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        print("   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ CLI —Ä–µ–∂–∏–º: python main.py --cli")
        print("="*60 + "\n")
        
        return 0
        
    except KeyboardInterrupt:
        logger.info("\n–ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 0
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ GUI: {e}", exc_info=True)
        return 1


def run_cli(args, config_dir: Path, debug: bool = False):
    """–ó–∞–ø—É—Å–∫ CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    logger = setup_logging(debug)
    
    try:
        logger.info("–ó–∞–ø—É—Å–∫ CLI —Ä–µ–∂–∏–º–∞...")
        
        # TODO: –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å CLI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –æ–Ω–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ
        # from backup1c.cli.commands import cli
        # sys.argv = [sys.argv[0]] + args
        # return cli()
        
        # –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞
        print("\n" + "="*60)
        print("‚å®Ô∏è  CLI –†–ï–ñ–ò–ú (–í –†–ê–ó–†–ê–ë–û–¢–ö–ï)")
        print("="*60)
        print(f"\n–í–µ—Ä—Å–∏—è: {__version__}")
        print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {config_dir}")
        print(f"–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {'–í–∫–ª—é—á–µ–Ω' if debug else '–í—ã–∫–ª—é—á–µ–Ω'}")
        print("\nüí° CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ")
        print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è):")
        print("  backup              - –ó–∞–ø—É—Å–∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è")
        print("  setup               - –ú–∞—Å—Ç–µ—Ä –ø–µ—Ä–≤–∏—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        print("  list                - –°–ø–∏—Å–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –±–∞–∑")
        print("  schedule            - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º")
        print("="*60 + "\n")
        
        return 0
        
    except KeyboardInterrupt:
        logger.info("\n–ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 0
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ CLI: {e}", exc_info=True)
        return 1


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
    check_python_version()
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    args, unknown_args = parse_arguments()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    args.config_dir.mkdir(parents=True, exist_ok=True)
    (ROOT_DIR / 'logs').mkdir(parents=True, exist_ok=True)
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    if not args.cli:
        print(f"\n{'='*60}")
        print(f"  Backup1C v{__version__}")
        print(f"  –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö 1–°")
        print(f"{'='*60}\n")
    
    # –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å–∫–∞
    if args.cli or unknown_args:
        return run_cli(unknown_args, args.config_dir, args.debug)
    else:
        return run_gui(args.config_dir, args.debug)


if __name__ == '__main__':
    sys.exit(main())